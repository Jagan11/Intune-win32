name: Package Slack macOS .intunemac

on:
  workflow_dispatch:

jobs:
  package-slack:
    runs-on: macos-latest
    steps:
      - name: Create directories
        run: |
          mkdir -p input
          mkdir -p output
          mkdir -p tools
          mkdir -p temp_app_dir # Directory to hold the extracted .app

      - name: Checkout repository (for IntuneAppUtil setup)
        uses: actions/checkout@v3

      - name: Download Microsoft Shell Intune App Utility
        run: |
          set -eux
          echo "Cloning Shell Intune Samples repository to get IntuneAppUtil..."
          # Corrected repository URL for IntuneAppUtil
          GIT_TERMINAL_PROMPT=0 git clone --depth 1 https://github.com/microsoft/shell-intune-samples.git tools/intune-app-utility-repo
          
          # Move IntuneAppUtil from its specific path within the cloned repo to the tools directory and make it executable
          # Corrected path: IntuneAppUtil is directly under macOS/Tools
          mv tools/intune-app-utility-repo/macOS/Tools/IntuneAppUtil tools/IntuneAppUtil
          chmod +x tools/IntuneAppUtil
          
          # Clean up the cloned repository
          rm -rf tools/intune-app-utility-repo
          echo "IntuneAppUtil prepared."

      - name: Download latest Slack macOS DMG
        run: |
          echo "Downloading latest Slack DMG..."
          # Use a direct link to the latest stable Slack DMG
          # This URL is more reliable than the ssb/download-osx redirect
          curl -L "https://downloads.slack-edge.com/releases/macos/Slack-latest.dmg" -o "input/Slack-latest.dmg"
          echo "Downloaded Slack DMG to input/Slack-latest.dmg"

      - name: Extract Slack.app from DMG and get version
        run: |
          set -eux
          DMG_PATH="input/Slack-latest.dmg"
          APP_NAME="Slack.app" # Expected name of the application bundle inside the DMG
          
          echo "Attaching DMG for Slack.app extraction..."
          # Attach the DMG, allowing it to be mounted
          MOUNT_OUTPUT=$(hdiutil attach "$DMG_PATH" -nobrowse -noverify)
          echo "hdiutil attach output:"
          echo "$MOUNT_OUTPUT"

          # Extract the mount point, robustly handling spaces in the volume name
          MOUNTPOINT=$(echo "$MOUNT_OUTPUT" | grep '/Volumes/' | head -n 1 | sed -E 's/.*(\/Volumes\/.*)/\1/')
          echo "Mounted DMG at: $MOUNTPOINT"

          if [ -z "$MOUNTPOINT" ]; then
            echo "Error: Could not find mount point for Slack DMG."
            exit 1
          fi

          # Copy the .app bundle to a temporary directory for packaging
          echo "Copying $APP_NAME from DMG to temporary directory..."
          cp -R "$MOUNTPOINT/$APP_NAME" "temp_app_dir/$APP_NAME"
          echo "$APP_NAME copied."

          # Read the CFBundleShortVersionString from the copied Slack.app's Info.plist
          VERSION=$(defaults read "temp_app_dir/$APP_NAME/Contents/Info.plist" CFBundleShortVersionString || echo "unknown")
          echo "SLACK_VERSION=$VERSION" >> $GITHUB_ENV
          echo "Slack version: $VERSION"

          echo "Detaching DMG..."
          hdiutil detach "$MOUNTPOINT" -quiet
          echo "DMG detached."

      - name: Create .intunemac package using IntuneAppUtil
        run: |
          set -eux
          # Run the IntuneAppUtil on the extracted Slack.app
          # Output to the 'output' directory with a versioned name
          ./tools/IntuneAppUtil -c "temp_app_dir" -o "output" -n "Slack-macOS-$SLACK_VERSION.intunemac"
          echo "Slack-macOS-$SLACK_VERSION.intunemac created."

      - name: Upload .intunemac artifact
        uses: actions/upload-artifact@v4
        with:
          name: slack-macos-intunemac
          path: output/*.intunemac
          retention-days: 7
