name: Build and Package Slack MSI for Intune

on:
  workflow_dispatch:

jobs:
  package-slack:
    runs-on: windows-latest

    steps:
      - name: Create directories
        run: |
          New-Item -Path input -ItemType Directory -Force
          New-Item -Path output -ItemType Directory -Force

      - name: Download Slack MSI installer
        shell: pwsh
        run: |
          # Replace this URL with the official Slack MSI download link
          $url = "https://downloads.slack-edge.com/releases_x64/slack-setup-latest.msi"
          Write-Host "Downloading Slack MSI from $url"
          Invoke-WebRequest -Uri $url -OutFile "input\\slack-setup.msi"

      - name: Get Slack MSI version
        shell: pwsh
        run: |
          $version = (Get-Item "input\\slack-setup.msi").VersionInfo.ProductVersion
          Write-Host "Slack MSI version: $version"
          echo "SLACK_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Download Microsoft Win32 Content Prep Tool
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://github.com/microsoft/Microsoft-Win32-Content-Prep-Tool/raw/2d0afcf7c1faf9c0f7dbd6db9c90b19f5dfec994/IntuneWinAppUtil.exe" -OutFile "IntuneWinAppUtil.exe"
          if (-not (Test-Path "IntuneWinAppUtil.exe")) {
              Write-Error "IntuneWinAppUtil.exe not downloaded."
              exit 1
          }

      - name: Package Slack MSI to IntuneWin format
        shell: pwsh
        run: |
          .\IntuneWinAppUtil.exe -c ".\input" -s "slack-setup.msi" -o ".\output" -q
          $originalFileName = "output\\slack-setup.intunewin"
          $newName = "Slack-win-x64-$env:SLACK_VERSION.intunewin"
          Rename-Item -Path $originalFileName -NewName $newName -Force
          Write-Host "Renamed $originalFileName to $newName"

      - name: Upload Slack intunewin package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: slack-intunewin
          path: output/*.intunewin
