name: Get Node.js PKG for Intune

on:
  workflow_dispatch:

jobs:
  nodejs-pkg:
    runs-on: macos-latest
    steps:
      - name: Create directories
        run: mkdir -p input output

      - name: Get latest Node.js LTS version and download PKG (try arm64 then x64)
        run: |
          set -eux

          # Fetch Node.js version info
          NODE_INDEX=$(curl -s "https://nodejs.org/dist/index.json")
          LTS_VERSION_FULL=$(echo "$NODE_INDEX" | jq -r '.[] | select(.lts) | .version' | sort -V | tail -n 1)
          if [ -z "$LTS_VERSION_FULL" ]; then
            echo "Error: Could not determine latest LTS Node.js version."
            exit 1
          fi
          echo "Found Node.js LTS version: $LTS_VERSION_FULL"

          # Prepare download URLs for both archs
          ARM64_PKG="node-${LTS_VERSION_FULL}-darwin-arm64.pkg"
          X64_PKG="node-${LTS_VERSION_FULL}-darwin-x64.pkg"

          ARM64_URL="https://nodejs.org/dist/${LTS_VERSION_FULL}/${ARM64_PKG}"
          X64_URL="https://nodejs.org/dist/${LTS_VERSION_FULL}/${X64_PKG}"

          mkdir -p output

          # Try to download ARM64 PKG first
          echo "Trying to download ARM64 package: $ARM64_URL"
          if curl --fail -L "$ARM64_URL" -o "output/$ARM64_PKG"; then
            DOWNLOAD_URL=$ARM64_URL
            INSTALLER_FILENAME=$ARM64_PKG
            echo "Downloaded ARM64 package."
          else
            echo "ARM64 package not found, trying x64 package..."
            if curl --fail -L "$X64_URL" -o "output/$X64_PKG"; then
              DOWNLOAD_URL=$X64_URL
              INSTALLER_FILENAME=$X64_PKG
              echo "Downloaded x64 package."
            else
              echo "Error: Neither ARM64 nor x64 Node.js PKG found for version $LTS_VERSION_FULL"
              exit 1
            fi
          fi

          # Check file size (minimum 10 MB)
          FILE_SIZE_BYTES=$(stat -f%z "output/$INSTALLER_FILENAME")
          MIN_EXPECTED_SIZE_BYTES=10000000
          if [ "$FILE_SIZE_BYTES" -lt "$MIN_EXPECTED_SIZE_BYTES" ]; then
            echo "Error: Downloaded PKG file is too small ($FILE_SIZE_BYTES bytes). Download likely failed."
            exit 1
          fi

          echo "Downloaded PKG size: $FILE_SIZE_BYTES bytes (looks good)."

          # Export variables for later steps
          echo "NODEJS_VERSION=$LTS_VERSION_FULL" >> $GITHUB_ENV
          echo "NODEJS_DOWNLOAD_URL=$DOWNLOAD_URL" >> $GITHUB_ENV
          echo "NODEJS_INSTALLER_FILENAME=$INSTALLER_FILENAME" >> $GITHUB_ENV

      - name: Upload Node.js PKG as artifact
        uses: actions/upload-artifact@v4
        with:
          name: nodejs-pkg
          path: output/*.pkg
