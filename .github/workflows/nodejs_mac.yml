name: Get Universal Node.js PKGs for Intune

on:
  workflow_dispatch:

jobs:
  nodejs-pkg:
    runs-on: macos-latest
    steps:
      - name: Create directories
        run: |
          mkdir -p output
      
      - name: Get latest Node.js LTS version
        run: |
          set -eux
          NODE_INDEX=$(curl -s "https://nodejs.org/dist/index.json")

          # Get latest LTS version
          LTS_VERSION=$(echo "$NODE_INDEX" | jq -r '.[] | select(.lts != false and .lts != null) | .version' | head -n 1)

          if [ -z "$LTS_VERSION" ]; then
            echo "Error: Could not determine latest LTS Node.js version."
            exit 1
          fi

          echo "Found LTS version: $LTS_VERSION"

          echo "NODEJS_VERSION=$LTS_VERSION" >> $GITHUB_ENV

      - name: Download both Intel & ARM installers
        run: |
          set -eux
          ARCHS=("darwin-x64" "darwin-arm64")

          for ARCH in "${ARCHS[@]}"; do
            INSTALLER_FILENAME="node-${NODEJS_VERSION}-${ARCH}.pkg"
            DOWNLOAD_URL="https://nodejs.org/dist/${NODEJS_VERSION}/${INSTALLER_FILENAME}"
            echo "Downloading $DOWNLOAD_URL"
            curl -L "$DOWNLOAD_URL" -o "output/$INSTALLER_FILENAME"

            FILE_SIZE_BYTES=$(stat -f %z "output/$INSTALLER_FILENAME")
            if [ "$FILE_SIZE_BYTES" -lt 10000000 ]; then
              echo "Error: $INSTALLER_FILENAME is too small ($FILE_SIZE_BYTES bytes)."
              exit 1
            fi
          done

      - name: Create universal zip for Intune
        run: |
          cd output
          UNIVERSAL_FILENAME="node-${NODEJS_VERSION}-macos-universal.zip"
          zip -r "$UNIVERSAL_FILENAME" *.pkg
          echo "UNIVERSAL_FILENAME=$UNIVERSAL_FILENAME" >> $GITHUB_ENV

      - name: Upload Node.js Universal PKG zip
        uses: actions/upload-artifact@v4
        with:
          name: nodejs-universal-pkg
          path: output/*.zip
