name: Get Node.js PKG for Intune

on:
  workflow_dispatch:

jobs:
  nodejs-pkg:
    runs-on: macos-latest
    steps:
      - name: Create directories
        run: |
          mkdir -p output

      - name: Get latest Node.js LTS version with macOS PKGs
        run: |
          set -eux
          
          # Fetch Node.js release index
          NODE_INDEX=$(curl -s https://nodejs.org/dist/index.json)

          # Find latest LTS version that has both darwin-x64 and darwin-arm64 PKG installers
          LTS_VERSION=$(echo "$NODE_INDEX" | jq -r '
            .[]
            | select(.lts != false and .lts != null)
            | select((.files | type) == "array")
            | select(index("darwin-x64") and index("darwin-arm64"))
            | .version
          ' | head -n 1)

          if [ -z "$LTS_VERSION" ]; then
            echo "Error: No LTS version with both macOS PKGs found."
            exit 1
          fi

          echo "Found LTS version: $LTS_VERSION"
          echo "NODEJS_VERSION=$LTS_VERSION" >> $GITHUB_ENV

      - name: Download Node.js PKGs
        run: |
          set -eux
          ARCHS=("darwin-x64" "darwin-arm64")

          for ARCH in "${ARCHS[@]}"; do
            INSTALLER_FILENAME="node-${NODEJS_VERSION}-${ARCH}.pkg"
            DOWNLOAD_URL="https://nodejs.org/dist/${NODEJS_VERSION}/${INSTALLER_FILENAME}"
            echo "Downloading $DOWNLOAD_URL"
            curl -L "$DOWNLOAD_URL" -o "output/$INSTALLER_FILENAME"

            # Verify file size (at least 10 MB)
            FILE_SIZE_BYTES=$(stat -f %z "output/$INSTALLER_FILENAME")
            if [ "$FILE_SIZE_BYTES" -lt 10000000 ]; then
              echo "Error: $INSTALLER_FILENAME is too small ($FILE_SIZE_BYTES bytes)."
              exit 1
            fi
          done

      - name: Upload Node.js PKGs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: nodejs-pkgs
          path: output/*.pkg
