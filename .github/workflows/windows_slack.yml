name: Build Slack and Telegram windows Packages

on:
  workflow_dispatch:

jobs:
  telegram:
    runs-on: windows-latest
    steps:
      - name: Create directories
        run: |
          New-Item -Path input -ItemType Directory -Force
          New-Item -Path output -ItemType Directory -Force

      - name: Get latest Telegram installer URL and download
        shell: pwsh
        run: |
          # This fetches the latest stable release from the official Telegram Desktop GitHub releases.
          $apiUrl = "https://api.github.com/repos/telegramdesktop/tdesktop/releases/latest"
          $response = Invoke-RestMethod -Uri $apiUrl
          $asset = $response.assets | Where-Object { $_.name -like "*64.exe" -and $_.name -notlike "*portable*" } | Select-Object -First 1
          if ($null -eq $asset) {
              Write-Error "Could not find a suitable 64-bit Telegram installer asset."
              exit 1
          }
          $downloadUrl = $asset.browser_download_url
          $installerFileName = $asset.name
          Write-Host "Downloading Telegram Desktop from: $downloadUrl"
          Invoke-WebRequest -Uri $downloadUrl -OutFile "input\$installerFileName"
          echo "TELEGRAM_INSTALLER_FILENAME=$installerFileName" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Get Telegram installer version and set as environment variable
        shell: pwsh
        run: |
          $installerPath = "input\$env:TELEGRAM_INSTALLER_FILENAME"
          $version = (Get-Item $installerPath).VersionInfo.ProductVersion
          Write-Host "Telegram installer version: $version"
          echo "TELEGRAM_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Download Microsoft Win32 Content Prep Tool
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://github.com/microsoft/Microsoft-Win32-Content-Prep-Tool/raw/2d0afcf7c1faf9c0f7dbd6db9c90b19f5dfec994/IntuneWinAppUtil.exe" -OutFile "IntuneWinAppUtil.exe"

      - name: Package Telegram using IntuneWinAppUtil
        shell: pwsh
        run: |
          $installerFileName = "$env:TELEGRAM_INSTALLER_FILENAME"
          .\IntuneWinAppUtil.exe -c ".\input" -s "$installerFileName" -o ".\output" -q
          $originalFileName = "output\$($installerFileName -replace '\.exe$', '.intunewin')"
          $newName = "Telegram-win-x64-$env:TELEGRAM_VERSION.intunewin"
          Rename-Item -Path $originalFileName -NewName $newName -Force
          Write-Host "Renamed $originalFileName to $newName"

      - name: Upload Telegram package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: telegram-intunewin
          path: output/*.intunewin

  slack:
    runs-on: windows-latest
    steps:
      - name: Create directories
        run: |
          New-Item -Path input -ItemType Directory -Force
          New-Item -Path output -ItemType Directory -Force

      - name: Download latest Slack for Windows installer
        shell: pwsh
        run: |
          # This URL from the official Slack website downloads the latest stable 64-bit EXE installer.
          $downloadUrl = "https://slack.com/ssb/download-win64"
          Write-Host "Downloading Slack from: $downloadUrl"
          Invoke-WebRequest -Uri $downloadUrl -OutFile "input\SlackSetup.exe"

      - name: Get Slack installer version and set as environment variable
        shell: pwsh
        run: |
          $version = (Get-Item "input\SlackSetup.exe").VersionInfo.ProductVersion
          Write-Host "Slack installer version: $version"
          echo "SLACK_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Download Microsoft Win32 Content Prep Tool
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://github.com/microsoft/Microsoft-Win32-Content-Prep-Tool/raw/2d0afcf7c1faf9c0f7dbd6db9c90b19f5dfec994/IntuneWinAppUtil.exe" -OutFile "IntuneWinAppUtil.exe"

      - name: Package Slack using IntuneWinAppUtil
        shell: pwsh
        run: |
          .\IntuneWinAppUtil.exe -c ".\input" -s "SlackSetup.exe" -o ".\output" -q
          $originalFileName = "output\SlackSetup.intunewin"
          $newName = "Slack-win-x64-$env:SLACK_VERSION.intunewin"
          Rename-Item -Path $originalFileName -NewName $newName -Force
          Write-Host "Renamed $originalFileName to $newName"

      - name: Upload Slack package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: slack-intunewin
          path: output/*.intunewin
