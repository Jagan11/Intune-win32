name: Package Slack Windows IntuneWin

on:
  workflow_dispatch:

jobs:
  slack-windows-intunewin:
    runs-on: windows-latest # Requires a Windows runner for IntuneWinAppUtil.exe
    steps:
      - name: Create directories
        run: |
          mkdir -p input output tools

      - name: Download latest Slack Windows Installer (EXE)
        run: |
          # Use a direct download link for the latest Windows installer
          # This usually downloads an executable (e.g., SlackSetup.exe)
          curl -L "https://slack.com/ssb/download-win" -o "input/SlackSetup.exe"
          echo "Downloaded SlackSetup.exe to input/"

      - name: Download IntuneWinAppUtil.exe
        run: |
          # Download the latest IntuneWinAppUtil.exe tool from Microsoft's GitHub repo
          # This tool is used to package Windows apps into .intunewin format
          curl -L "https://github.com/microsoft/Microsoft-Win32-Content-Prep-Tool/releases/latest/download/IntuneWinAppUtil.exe" -o "tools/IntuneWinAppUtil.exe"
          echo "Downloaded IntuneWinAppUtil.exe to tools/"

      - name: Get Slack Installer Version
        # Extract version from the installer executable (Windows specific)
        run: |
          # This PowerShell command gets the FileVersionInfo of the exe
          $version = (Get-Item "input/SlackSetup.exe").VersionInfo.FileVersion
          echo "SLACK_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "Slack Installer Version: $version"

      - name: Wrap Slack Installer into .intunewin
        run: |
          # The IntuneWinAppUtil.exe requires specific arguments:
          # -c <source_folder>: Folder containing the setup files
          # -s <setup_file>: The main setup executable relative to source_folder
          # -o <output_folder>: Where to save the .intunewin file
          # -q : Quiet mode (no prompts)
          echo "Wrapping SlackSetup.exe into .intunewin..."
          & "tools/IntuneWinAppUtil.exe" -c "input" -s "SlackSetup.exe" -o "output" -q
          
          # Rename the output .intunewin file to include the version
          $intunewinPath = Get-ChildItem -Path "output" -Filter "*.intunewin" | Select-Object -ExpandProperty FullName
          if ($intunewinPath) {
            $newName = "Slack-Windows-$env:SLACK_VERSION.intunewin"
            Move-Item -Path $intunewinPath -Destination (Join-Path "output" $newName)
            echo "Renamed .intunewin to: $newName"
          } else {
            Write-Error "Failed to find the generated .intunewin file."
            exit 1
          }

      - name: Upload .intunewin Artifact
        uses: actions/upload-artifact@v4
        with:
          name: slack-windows-intunewin
          path: output/*.intunewin
          retention-days: 7
